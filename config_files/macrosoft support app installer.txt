; Basic Inno Setup Script (myinstaller.iss)
[Setup]
AppName=Macrosoft Support
AppVersion=1.0
AppPublisher=Macrosoft s.r.o
AppPublisherURL=https://online.macrosoft.sk/
AppSupportURL=https://online.macrosoft.sk/
AppUpdatesURL=https://online.macrosoft.sk/
DefaultDirName={autopf}\Macrosoft Support
DisableProgramGroupPage=yes
OutputDir=.\Output
OutputBaseFilename=MacrosoftSupportInstaller
SetupIconFile=myicon.ico
Compression=lzma2
SolidCompression=yes
PrivilegesRequired=lowest

[Languages]
Name: "en"; MessagesFile: "compiler:Default.isl"
Name: "sk"; MessagesFile: "Languages\Slovak.isl"

[Code]
var
  LanguagePage: TInputOptionWizardPage;
  AppLanguage: String;

procedure InitializeWizard;
begin
  { Create custom page }
  LanguagePage := CreateInputOptionPage(
    wpSelectDir,
    'Application Language',
    'Choose the application language',
    'Please select your preferred language for the application:',
    True, False);
  LanguagePage.Add('English');
  LanguagePage.Add('Slovensky');
  LanguagePage.Values[0] := True; { Default to English }
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if CurPageID = LanguagePage.ID then
  begin
    if LanguagePage.Values[0] then
      AppLanguage := 'en'
    else
      AppLanguage := 'sk';
  end;
  Result := True;
end;

// Function to check if the language is English
function IsEnglish: Boolean;
begin
  Result := (AppLanguage = 'en'); // Assuming AppLanguage is a variable you've defined
end;

// Function to check if the language is English
function IsSlovak: Boolean;
begin
  Result := (AppLanguage = 'sk'); // Assuming AppLanguage is a variable you've defined
end;

[Files]
; English version
Source: "Source\English\MacrosoftSupportLauncher.exe"; DestDir: "{app}"; Flags: ignoreversion; Check: IsEnglish
; Slovak version
Source: "Source\Slovak\MacrosoftSupportLauncher.exe"; DestDir: "{app}"; Flags: ignoreversion; Check: IsSlovak

Source: "Source\English\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Check: IsEnglish
Source: "Source\Slovak\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Check: IsSlovak

; Optional: Include both language files if needed
; Source: "Source\English\MyApp.exe"; DestDir: "{app}\en"; Flags: ignoreversion
; Source: "Source\Slovak\MyApp.exe"; DestDir: "{app}\sk"; Flags: ignoreversion

; [Files]
; Main executable
; Source: "..\dist\MacrosoftSupportLauncher.exe"; DestDir: "{app}"; Flags: ignoreversion

; Include all files from PyInstaller's dist folder
; Source: "..\dist\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs


[Icons]
Name: "{autoprograms}\Macrosoft Support"; Filename: "{app}\MacrosoftSupportLauncher.exe"
Name: "{autodesktop}\Macrosoft Support"; Filename: "{app}\MacrosoftSupportLauncher.exe"; Tasks: desktopicon

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"

[Code]
procedure CurStepChanged(CurStep: TSetupStep);
var
  InstallerPath: String;
  ConfigPath: String;
begin
  if CurStep = ssPostInstall then begin
    // Get the full path of the installer executable
    InstallerPath := ExpandConstant('{srcexe}');

    // Create path for output file
    ConfigPath := ExpandConstant('{app}\installer_path.txt');

    // Save directly to file with UTF-8 encoding
    SaveStringToFile(
      ConfigPath,
      'Installer Path: ' + InstallerPath + #13#10,
      False
    );
  end;
end;